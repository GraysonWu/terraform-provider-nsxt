//nolint:revive
package domains

// The following file has been autogenerated. Please avoid any changes!
import (
	"errors"

	vapiProtocolClient_ "github.com/vmware/vsphere-automation-sdk-go/runtime/protocol/client"
	client1 "github.com/vmware/vsphere-automation-sdk-go/services/nsxt-gm/global_infra/domains"
	lrmodel1 "github.com/vmware/vsphere-automation-sdk-go/services/nsxt-gm/model"
	client0 "github.com/vmware/vsphere-automation-sdk-go/services/nsxt/infra/domains"
	lrmodel0 "github.com/vmware/vsphere-automation-sdk-go/services/nsxt/model"
	client2 "github.com/vmware/vsphere-automation-sdk-go/services/nsxt/orgs/projects/infra/domains"

	utl "github.com/vmware/terraform-provider-nsxt/api/utl"
)

type PolicyFirewallFloodProtectionProfileBindingMapListResultClientContext utl.ClientContext

func NewFirewallFloodProtectionProfileBindingMapsClient(sessionContext utl.SessionContext, connector vapiProtocolClient_.Connector) *PolicyFirewallFloodProtectionProfileBindingMapListResultClientContext {
	var client interface{}

	switch sessionContext.ClientType {

	case utl.Local:
		client = client0.NewFirewallFloodProtectionProfileBindingMapsClient(connector)

	case utl.Global:
		client = client1.NewFirewallFloodProtectionProfileBindingMapsClient(connector)

	case utl.Multitenancy:
		client = client2.NewFirewallFloodProtectionProfileBindingMapsClient(connector)

	default:
		return nil
	}
	return &PolicyFirewallFloodProtectionProfileBindingMapListResultClientContext{Client: client, ClientType: sessionContext.ClientType, ProjectID: sessionContext.ProjectID}
}

func (c PolicyFirewallFloodProtectionProfileBindingMapListResultClientContext) List(cursorParam *string, includeMarkForDeleteObjectsParam *bool, includedFieldsParam *string, pageSizeParam *int64, sortAscendingParam *bool, sortByParam *string) (lrmodel0.PolicyFirewallFloodProtectionProfileBindingMapListResult, error) {
	var err error
	var obj lrmodel0.PolicyFirewallFloodProtectionProfileBindingMapListResult

	switch c.ClientType {

	case utl.Local:
		client := c.Client.(client0.FirewallFloodProtectionProfileBindingMapsClient)
		obj, err = client.List(cursorParam, includeMarkForDeleteObjectsParam, includedFieldsParam, pageSizeParam, sortAscendingParam, sortByParam)

	case utl.Global:
		client := c.Client.(client1.FirewallFloodProtectionProfileBindingMapsClient)
		gmObj, err := client.List(cursorParam, includeMarkForDeleteObjectsParam, includedFieldsParam, pageSizeParam, sortAscendingParam, sortByParam)
		if err != nil {
			return obj, err
		}
		obj1, err1 := utl.ConvertModelBindingType(gmObj, lrmodel1.PolicyFirewallFloodProtectionProfileBindingMapListResultBindingType(), lrmodel0.PolicyFirewallFloodProtectionProfileBindingMapListResultBindingType())
		if err1 != nil {
			return obj, err1
		}
		obj = obj1.(lrmodel0.PolicyFirewallFloodProtectionProfileBindingMapListResult)

	case utl.Multitenancy:
		client := c.Client.(client2.FirewallFloodProtectionProfileBindingMapsClient)
		obj, err = client.List(utl.DefaultOrgID, c.ProjectID, cursorParam, includeMarkForDeleteObjectsParam, includedFieldsParam, pageSizeParam, sortAscendingParam, sortByParam)

	default:
		err = errors.New("invalid infrastructure for model")
	}
	return obj, err
}
